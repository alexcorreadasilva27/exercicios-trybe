
// updateOne
use ("conteudo_trybe");
db.inventory.updateOne(
  { item: "paper" },
  { $set: { "size.uom": "cm", status: "P" } }
);

// updateMany
use ("conteudo_trybe");
db.inventory.updateMany(
  { "qty": { $lt: 50 } },
  { $set: { "size.uom": "in", status: "P" } }
);

// $set
// Exemplo 1
use ("conteudo_trybe");
db.products.insertOne({
  _id: 100,
  sku: "abc123",
  quantity: 250,
  instock: true,
  reorder: false,
  details: { model: "14Q2", make: "xyz" },
  tags: [ "apparel", "clothing" ],
  ratings: [ { by: "ijk", rating: 4 } ]
});

use ("conteudo_trybe");
db.products.update(
  { _id: 100 },
  { $set: {
      quantity: 500,
      details: { model: "14Q3", make: "xyz" },
      tags: [ "coats", "outerwear", "clothing" ]
    }
  }
);

// Exemplo 2
use ("conteudo_trybe");
db.products.updateOne(
  { _id: 100 },
  { $set: { "details.make": "zzz" } }
);

// Exemplo 3
use ("conteudo_trybe");
db.products.updateOne(
  { _id: 100 },
  { $set: {
      "tags.1": "rain gear",
      "ratings.0.rating": 2
    }
  }
);
//////////////////////////////////////////

// $mul
use ("conteudo_trybe");
db.products.insertOne(
  { "_id": 1, "item": "ABC", "price": NumberDecimal("10.99"), "qty": 25 }
);

use ("conteudo_trybe");
db.products.updateOne(
  { _id: 1 },
  { $mul: { price: NumberDecimal("1.25"), qty: 2 } }
);

use ("conteudo_trybe");
db.products.insertOne(
  { _id: 2, item: "Unknown" }
);

use ("conteudo_trybe");
db.products.updateOne(
  { _id: 2 },
  { $mul: { price: NumberLong("100") } }
);

use ("conteudo_trybe");
db.products.insertOne(
  { _id: 3,  item: "XYZ", price: NumberLong("10") }
);

use ("conteudo_trybe");
db.products.updateOne(
  { _id: 3 },
  { $mul: { price: NumberInt(5) } }
);

use ("conteudo_trybe");
db.products.find();
/////////////////////////////////////////////

// $inc

use ("conteudo_trybe");
db.increment.insertOne(
  {
    _id: 1,
    sku: "abc123",
    quantity: 10,
    metrics: {
      orders: 2,
      ratings: 3.5
    }
  }
);

use ("conteudo_trybe");
db.increment.updateOne(
  { sku: "abc123" },
  { $inc: { quantity: -2, "metrics.orders": 1 } }
);

use ("conteudo_trybe");
db.increment.find();
////////////////////////////////////////////////

// $min e $max

use ("conteudo_trybe");
db.scores.insertOne(
  { _id: 1, highScore: 800, lowScore: 200 }
);

// Exemplo 1 comparando n√∫meros
use ("conteudo_trybe")
db.scores.updateOne({ _id: 1 }, { $min: { lowScore: 150 } });

use ("conteudo_trybe");
db.scores.update({ _id: 1 }, { $max: { highScore: 950 } });

use ("conteudo_trybe");
db.scores.find();

// Exemplo 2 Comparando datas

use ("conteudo_trybe");
db.tags.insertOne(
  {
    _id: 1,
    desc: "crafts",
    dateEntered: ISODate("2019-10-01T05:00:00Z"),
    dateExpired: ISODate("2019-10-01T16:38:16Z")
  }
);

use ("conteudo_trybe");
db.tags.update(
   { _id: 1 },
   { $min: { dateEntered: new Date("2019-09-24") } }
);

use ("conteudo_trybe");
db.tags.update(
   { _id: 1 },
   { $max: { dateEntered: new Date("2019-09-25") } }
);

use ("conteudo_trybe");
db.tags.find();