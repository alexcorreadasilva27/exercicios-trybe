{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/Pokedex.js\";\nimport React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filteredType: 'all'\n    };\n  }\n\n  filteredPokemons(filteredType) {\n    this.setState({\n      filteredType,\n      pokemonIndex: 0\n    });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {\n      pokemons\n    } = this.props;\n    const {\n      filteredType\n    } = this.state;\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {\n      pokemons\n    } = this.props;\n    return [...new Set(pokemons.reduce((types, {\n      type\n    }) => [...types, type], []))];\n  }\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n    const {\n      pokemons\n    } = this.props; //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n    //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n    //   por props cada item do array. \n    //   Lembre-se: é no componente Pokemon que iremos\n    //   renderizar todas as informações necessárias para a exibição.\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokedex\",\n      children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: pokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokedex-buttons-panel\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onclick: () => this.filteredPokemons('all'),\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), pokemonTypes.map(type => /*#__PURE__*/_jsxDEV(Button, {\n          onclick: () => this.filteredPokemons(type),\n          className: \"filter-button\",\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"pokedex-button\",\n        onclick: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Pokedex;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/Pokedex.js"],"names":["React","Pokemon","Button","Pokedex","Component","constructor","props","state","pokemonIndex","filteredType","filteredPokemons","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","filter","pokemon","type","fetchPokemonTypes","Set","reduce","types","render","pokemonTypes","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,CADL;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAEDC,EAAAA,gBAAgB,CAACD,YAAD,EAAe;AAC3B,SAAKE,QAAL,CAAc;AAACF,MAAAA,YAAD;AAAeD,MAAAA,YAAY,EAAE;AAA7B,KAAd;AACH;;AAEDI,EAAAA,WAAW,CAACC,gBAAD,EAAmB;AAC1B,SAAKF,QAAL,CAAcJ,KAAK,KAAK;AACpBC,MAAAA,YAAY,EAAE,CAACD,KAAK,CAACC,YAAN,GAAqB,CAAtB,IAA4BK;AADtB,KAAL,CAAnB;AAGH;;AAEDC,EAAAA,qBAAqB,GAAG;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AAEA,WAAOQ,QAAQ,CAACC,MAAT,CAAgBC,OAAO,IAAI;AAC9B,UAAIR,YAAY,KAAK,KAArB,EAA4B,OAAO,IAAP;AAC5B,aAAQQ,OAAO,CAACC,IAAR,KAAiBT,YAAzB;AACH,KAHM,CAAP;AAIH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AAEA,WAAO,CAAC,GAAG,IAAIc,GAAJ,CAAQL,QAAQ,CAACM,MAAT,CAAgB,CAACC,KAAD,EAAQ;AAACJ,MAAAA;AAAD,KAAR,KAAmB,CAAC,GAAGI,KAAJ,EAAWJ,IAAX,CAAnC,EAAqD,EAArD,CAAR,CAAJ,CAAP;AACH;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAMb,gBAAgB,GAAG,KAAKI,qBAAL,EAAzB;AACA,UAAMU,YAAY,GAAG,KAAKL,iBAAL,EAArB;AACA,UAAMF,OAAO,GAAGP,gBAAgB,CAAC,KAAKH,KAAL,CAAWC,YAAZ,CAAhC;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAe,KAAKT,KAA1B,CAJO,CAKT;AACA;AACA;AACA;AACA;;AACI,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,OAAD;AAAS,QAAA,OAAO,EAAGW;AAAnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE,QAAC,MAAD;AACA,UAAA,OAAO,EAAE,MAAM,KAAKP,gBAAL,CAAsB,KAAtB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAKGc,YAAY,CAACC,GAAb,CAAiBP,IAAI,iBACpB,QAAC,MAAD;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKR,gBAAL,CAAsBQ,IAAtB,CAFjB;AAGE,UAAA,SAAS,EAAC,eAHZ;AAAA,oBAKMA;AALN,WACQA,IADR;AAAA;AAAA;AAAA;AAAA,gBADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAiBE,QAAC,MAAD;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,OAAO;AAFT;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA0BH;;AAvEiC;;AA0EtC,eAAef,OAAf","sourcesContent":["import React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './button';\n\nclass Pokedex extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            pokemonIndex: 0,\n            filteredType: 'all',\n        };\n    }\n\n    filteredPokemons(filteredType) {\n        this.setState({filteredType, pokemonIndex: 0})\n    };\n\n    nextPokemon(numberOfPokemons) {\n        this.setState(state => ({\n            pokemonIndex: (state.pokemonIndex + 1) %  numberOfPokemons,\n        }));\n    }\n\n    fetchFilteredPokemons() {\n        const { pokemons } = this.props;\n        const { filteredType } = this.state;\n\n        return pokemons.filter(pokemon => {\n            if (filteredType === 'all') return true;\n            return  pokemon.type === filteredType;\n        });\n    }\n\n    fetchPokemonTypes() {\n        const { pokemons } = this.props;\n\n        return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))]\n    }\n\n    render() {\n      const filteredPokemons = this.fetchFilteredPokemons();\n      const pokemonTypes = this.fetchPokemonTypes();\n      const pokemon = filteredPokemons[this.state.pokemonIndex];\n      const { pokemons } = this.props;\n    //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n    //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n    //   por props cada item do array. \n    //   Lembre-se: é no componente Pokemon que iremos\n    //   renderizar todas as informações necessárias para a exibição.\n        return (\n            <div className=\"pokedex\">\n                <Pokemon pokemon={ pokemon }/>\n              <div className=\"pokedex-buttons-panel\">\n                <Button \n                onclick={() => this.filteredPokemons('all')}>\n                    All\n                </Button>\n                {pokemonTypes.map(type =>(\n                  <Button \n                    key={ type }\n                    onclick={() => this.filteredPokemons(type)}\n                    className=\"filter-button\"\n                  >\n                      { type }\n                  </Button>\n                ))}\n              </div>\n              <Button \n                className=\"pokedex-button\"\n                onclick \n              >\n\n              </Button>\n            </div>\n        );\n    }\n}\n\nexport default Pokedex;"]},"metadata":{},"sourceType":"module"}