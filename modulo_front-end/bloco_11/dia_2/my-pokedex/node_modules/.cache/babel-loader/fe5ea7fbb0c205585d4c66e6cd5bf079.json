{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport pokemons from './data';\nimport Pokedex from './Pokedex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pokedex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pokedex, {\n        pokemons: pokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), \"/* No arquivo App.js, estamos renderizando o componente da Pokedex. Criamos a prop \\\"pokemons\\\", e nela chamamos o nosso json \\\"pokemons\\\", pokemons=\", \" \\xE9 a nossa prop e o valor dentro das \", \" \\xE9 o nosso json, ou seja nomeDaProps=\", valorDaProps, \", o nome da props \\xE9 o que foi passado dentro do componente Pokedex. O valor da props, vem o import que fizemos na linha 3 do arquivo data.js pois desta forma poderemos trabalhar com esses dados via \\\"props\\\". Uma informa\\xE7\\xE3o importante \\xE9 que podemos dar qualquer nome a uma prop, mas atente-se para que seja um nome descritivo. */ }\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/App.js"],"names":["React","pokemons","Pokedex","App","Component","render","valorDaProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAI;AAER,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEJ;AAAnB;AAAA;AAAA;AAAA;AAAA,cAFF,mPAM2BK,YAN3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAlB+B;;AAqBlC,eAAeH,GAAf","sourcesContent":["import React from 'react'\nimport './App.css';\nimport pokemons from './data';\nimport Pokedex from './Pokedex';\n\nclass App extends React.Component {\n  render () {\n\n    return (\n      <div className=\"App\">\n        <h1>Pokedex</h1>\n        <Pokedex pokemons={pokemons} />\n        /* No arquivo App.js, estamos renderizando o componente da Pokedex.\n            Criamos a prop \"pokemons\", e nela chamamos o nosso json \"pokemons\",\n            pokemons={} é a nossa prop e o valor dentro das {} é o nosso json,\n            ou seja nomeDaProps={valorDaProps}, o nome da props é o que foi passado\n            dentro do componente Pokedex.\n            O valor da props, vem o import que fizemos na linha 3 do arquivo data.js\n            pois desta forma poderemos trabalhar com esses dados via \"props\".\n            Uma informação importante é que podemos dar qualquer nome a uma prop,\n            mas atente-se para que seja um nome descritivo. */ }\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}