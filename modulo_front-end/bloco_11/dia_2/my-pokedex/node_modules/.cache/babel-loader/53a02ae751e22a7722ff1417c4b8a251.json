{"ast":null,"code":"// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css'\n// class Pokedex extends React.Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             pokemonIndex: 0,\n//             filteredType: 'all',\n//         };\n//     }\n//     filterPokemons(filteredType) {\n//         this.setState({filteredType, pokemonIndex: 0})\n//     };\n//     nextPokemon (numberOfPokemons) {\n//         this.setState(state => ({\n//             pokemonIndex: (state.pokemonIndex + 1) %  numberOfPokemons,\n//         }));\n//     }\n//     fetchFilteredPokemons() {\n//         const { pokemons } = this.props;\n//         const { filteredType } = this.state;\n//         return pokemons.filter(pokemon => {\n//             if (filteredType === 'all') return true;\n//             return  pokemon.type === filteredType;\n//         });\n//     }\n//     fetchPokemonTypes() {\n//         const { pokemons } = this.props;\n//         return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))]\n//     }\n//     render() {\n//       const filteredPokemons = this.fetchFilteredPokemons();\n//       const pokemonTypes = this.fetchPokemonTypes();\n//       const pokemon = filteredPokemons[this.state.pokemonIndex];\n//     //   const { pokemons } = this.props;\n//     //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n//     //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n//     //   por props cada item do array. \n//     //   Lembre-se: é no componente Pokemon que iremos\n//     //   renderizar todas as informações necessárias para a exibição.\n//         return (\n//             <div className=\"pokedex\">\n//                 <Pokemon pokemon={ pokemon }/>\n//               <div className=\"pokedex-buttons-panel\">\n//                 <Button \n//                 onclick={() => this.filterPokemons('all')}>\n//                     All\n//                 </Button>\n//                 {pokemonTypes.map(type =>(\n//                   <Button \n//                     key={ type }\n//                     onclick={() => this.filterPokemons(type)}\n//                     className=\"filter-button\"\n//                   >\n//                       { type }\n//                   </Button>\n//                 ))}\n//               </div>\n//               <Button \n//                 className=\"pokedex-button\"\n//                 onclick={() => this.nextPokemon(filteredPokemons.length)}\n//                 disabled={filteredPokemons.length <= 1}\n//               >\n//                 Próximo pokemon\n//               </Button>\n//             </div>\n//         );\n//     }\n// }\n// export default Pokedex;\n// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css';\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       pokemonIndex: 0,\n//       filteredType: 'all',\n//     };\n//   }\n//   filterPokemons(filteredType) {\n//     this.setState({ filteredType, pokemonIndex: 0 });\n//   }\n//   nextPokemon(numberOfPokemons) {\n//     this.setState(state => ({\n//       pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n//     }));\n//   }\n//   fetchFilteredPokemons() {\n//     const { pokemons } = this.props;\n//     const { filteredType } = this.state;\n//     return pokemons.filter(pokemon => {\n//       if (filteredType === 'all') return true;\n//       return pokemon.type === filteredType;\n//     });\n//   }\n//   fetchPokemonTypes() {\n//     const { pokemons } = this.props;\n//     return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n//   }\n//   render() {\n//     const filteredPokemons = this.fetchFilteredPokemons();\n//     const pokemonTypes = this.fetchPokemonTypes();\n//     const pokemon = filteredPokemons[this.state.pokemonIndex];\n//     return (\n//       <div className=\"pokedex\">\n//         <Pokemon pokemon={ pokemon } />\n//         <div className=\"pokedex-buttons-panel\">\n//           <Button\n//             onClick={() => this.filterPokemons('all')}\n//             className=\"filter-button\"\n//           >\n//             All\n//           </Button>\n//           {pokemonTypes.map(type => (\n//             <Button\n//               key={ type }\n//               onClick={() => this.filterPokemons(type)}\n//               className=\"filter-button\"\n//             >\n//               { type }\n//             </Button>\n//           ))}\n//         </div>\n//         <Button\n//           className=\"pokedex-button\"\n//           onClick={() => this.nextPokemon(filteredPokemons.length)}\n//           disabled={ filteredPokemons.length <= 1 }\n//         >\n//           Próximo pokémon\n//         </Button>\n//       </div>\n//     );\n//   }\n// }\n// export default Pokedex;\n// import React from 'react';\n// import pokemons from './data';\n// import Pokemon from './Pokemon';\n// import Button from './button'\n// import './button.css';\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.filterPokemons = this.filterPokemons.bind(this);\n//     this.state = {\n//       numberOfClicks: 0,\n//       arrayPokemon: pokemons,\n//     }\n//   }\n//   handleClick() {\n//     const { numberOfClicks, arrayPokemon } = this.state\n//     if (numberOfClicks === arrayPokemon.length-1) {\n//       this.setState({ numberOfClicks: 0 })\n//     } else {\n//       this.setState((initialState, _props) => ({\n//         numberOfClicks: initialState.numberOfClicks + 1,\n//       }))\n//     }\n//   }\n//   filterPokemons(specificType) {\n//     const newArrayPokemon = specificType === 'All'\n//      ? pokemons\n//      : pokemons.filter(({ type }) => specificType === type)\n//      this.setState(() => (\n//       {\n//         arrayPokemon: newArrayPokemon,\n//         numberOfClicks: 0\n//       }\n//       ))\n//   }\n//   render() {\n//     const types = pokemons.reduce((array, { type }) => {\n//       if (array.includes(type)) return array\n//       else return array.concat(type)\n//     }, ['All']);\n//     return (\n//       <div>\n//          <Pokemon pokemon={this.state.arrayPokemon[this.state.numberOfClicks]} />\n//         <div className=\"pokedex\">\n//           <button\n//           onClick={this.handleClick}\n//           disabled={ this.state.numberOfClicks === this.state.arrayPokemon.length - 1}\n//           >Próximo</button>\n//           {types.map((type)=> (\n//             <Button\n//             key={type}\n//             onClick={() => this.filterPokemons(type)}\n//             type={type}\n//             className={'pokeButao'}\n//             />\n//           ))}\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Pokedex;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/Pokedex.js"],"names":[],"mappingssourcesContent":["// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css'\n\n// class Pokedex extends React.Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             pokemonIndex: 0,\n//             filteredType: 'all',\n//         };\n//     }\n\n//     filterPokemons(filteredType) {\n//         this.setState({filteredType, pokemonIndex: 0})\n//     };\n\n//     nextPokemon (numberOfPokemons) {\n//         this.setState(state => ({\n//             pokemonIndex: (state.pokemonIndex + 1) %  numberOfPokemons,\n//         }));\n//     }\n\n//     fetchFilteredPokemons() {\n//         const { pokemons } = this.props;\n//         const { filteredType } = this.state;\n\n//         return pokemons.filter(pokemon => {\n//             if (filteredType === 'all') return true;\n//             return  pokemon.type === filteredType;\n//         });\n//     }\n\n//     fetchPokemonTypes() {\n//         const { pokemons } = this.props;\n\n//         return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))]\n//     }\n\n//     render() {\n//       const filteredPokemons = this.fetchFilteredPokemons();\n//       const pokemonTypes = this.fetchPokemonTypes();\n//       const pokemon = filteredPokemons[this.state.pokemonIndex];\n//     //   const { pokemons } = this.props;\n//     //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n//     //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n//     //   por props cada item do array. \n//     //   Lembre-se: é no componente Pokemon que iremos\n//     //   renderizar todas as informações necessárias para a exibição.\n//         return (\n//             <div className=\"pokedex\">\n//                 <Pokemon pokemon={ pokemon }/>\n//               <div className=\"pokedex-buttons-panel\">\n//                 <Button \n//                 onclick={() => this.filterPokemons('all')}>\n//                     All\n//                 </Button>\n//                 {pokemonTypes.map(type =>(\n//                   <Button \n//                     key={ type }\n//                     onclick={() => this.filterPokemons(type)}\n//                     className=\"filter-button\"\n//                   >\n//                       { type }\n//                   </Button>\n//                 ))}\n//               </div>\n//               <Button \n//                 className=\"pokedex-button\"\n//                 onclick={() => this.nextPokemon(filteredPokemons.length)}\n//                 disabled={filteredPokemons.length <= 1}\n//               >\n//                 Próximo pokemon\n//               </Button>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Pokedex;\n\n// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css';\n\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       pokemonIndex: 0,\n//       filteredType: 'all',\n//     };\n//   }\n\n//   filterPokemons(filteredType) {\n//     this.setState({ filteredType, pokemonIndex: 0 });\n//   }\n\n//   nextPokemon(numberOfPokemons) {\n//     this.setState(state => ({\n//       pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n//     }));\n//   }\n\n//   fetchFilteredPokemons() {\n//     const { pokemons } = this.props;\n//     const { filteredType } = this.state;\n\n//     return pokemons.filter(pokemon => {\n//       if (filteredType === 'all') return true;\n//       return pokemon.type === filteredType;\n//     });\n//   }\n\n//   fetchPokemonTypes() {\n//     const { pokemons } = this.props;\n\n//     return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n//   }\n\n//   render() {\n//     const filteredPokemons = this.fetchFilteredPokemons();\n//     const pokemonTypes = this.fetchPokemonTypes();\n//     const pokemon = filteredPokemons[this.state.pokemonIndex];\n\n//     return (\n//       <div className=\"pokedex\">\n//         <Pokemon pokemon={ pokemon } />\n//         <div className=\"pokedex-buttons-panel\">\n//           <Button\n//             onClick={() => this.filterPokemons('all')}\n//             className=\"filter-button\"\n//           >\n//             All\n//           </Button>\n//           {pokemonTypes.map(type => (\n//             <Button\n//               key={ type }\n//               onClick={() => this.filterPokemons(type)}\n//               className=\"filter-button\"\n//             >\n//               { type }\n//             </Button>\n//           ))}\n//         </div>\n//         <Button\n//           className=\"pokedex-button\"\n//           onClick={() => this.nextPokemon(filteredPokemons.length)}\n//           disabled={ filteredPokemons.length <= 1 }\n//         >\n//           Próximo pokémon\n//         </Button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Pokedex;\n\n// import React from 'react';\n// import pokemons from './data';\n// import Pokemon from './Pokemon';\n// import Button from './button'\n// import './button.css';\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.filterPokemons = this.filterPokemons.bind(this);\n//     this.state = {\n//       numberOfClicks: 0,\n//       arrayPokemon: pokemons,\n//     }\n//   }\n//   handleClick() {\n//     const { numberOfClicks, arrayPokemon } = this.state\n//     if (numberOfClicks === arrayPokemon.length-1) {\n//       this.setState({ numberOfClicks: 0 })\n//     } else {\n//       this.setState((initialState, _props) => ({\n//         numberOfClicks: initialState.numberOfClicks + 1,\n//       }))\n//     }\n//   }\n//   filterPokemons(specificType) {\n//     const newArrayPokemon = specificType === 'All'\n//      ? pokemons\n//      : pokemons.filter(({ type }) => specificType === type)\n//      this.setState(() => (\n//       {\n//         arrayPokemon: newArrayPokemon,\n//         numberOfClicks: 0\n//       }\n//       ))\n//   }\n//   render() {\n//     const types = pokemons.reduce((array, { type }) => {\n//       if (array.includes(type)) return array\n//       else return array.concat(type)\n//     }, ['All']);\n//     return (\n//       <div>\n//          <Pokemon pokemon={this.state.arrayPokemon[this.state.numberOfClicks]} />\n//         <div className=\"pokedex\">\n//           <button\n//           onClick={this.handleClick}\n//           disabled={ this.state.numberOfClicks === this.state.arrayPokemon.length - 1}\n//           >Próximo</button>\n//           {types.map((type)=> (\n//             <Button\n//             key={type}\n//             onClick={() => this.filterPokemons(type)}\n//             type={type}\n//             className={'pokeButao'}\n//             />\n//           ))}\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Pokedex;"]},"metadata":{},"sourceType":"module"}