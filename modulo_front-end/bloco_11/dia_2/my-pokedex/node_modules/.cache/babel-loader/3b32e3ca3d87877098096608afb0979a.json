{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/Pokedex.js\";\n// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css'\n// class Pokedex extends React.Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             pokemonIndex: 0,\n//             filteredType: 'all',\n//         };\n//     }\n//     filterPokemons(filteredType) {\n//         this.setState({filteredType, pokemonIndex: 0})\n//     };\n//     nextPokemon (numberOfPokemons) {\n//         this.setState(state => ({\n//             pokemonIndex: (state.pokemonIndex + 1) %  numberOfPokemons,\n//         }));\n//     }\n//     fetchFilteredPokemons() {\n//         const { pokemons } = this.props;\n//         const { filteredType } = this.state;\n//         return pokemons.filter(pokemon => {\n//             if (filteredType === 'all') return true;\n//             return  pokemon.type === filteredType;\n//         });\n//     }\n//     fetchPokemonTypes() {\n//         const { pokemons } = this.props;\n//         return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))]\n//     }\n//     render() {\n//       const filteredPokemons = this.fetchFilteredPokemons();\n//       const pokemonTypes = this.fetchPokemonTypes();\n//       const pokemon = filteredPokemons[this.state.pokemonIndex];\n//     //   const { pokemons } = this.props;\n//     //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n//     //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n//     //   por props cada item do array. \n//     //   Lembre-se: é no componente Pokemon que iremos\n//     //   renderizar todas as informações necessárias para a exibição.\n//         return (\n//             <div className=\"pokedex\">\n//                 <Pokemon pokemon={ pokemon }/>\n//               <div className=\"pokedex-buttons-panel\">\n//                 <Button \n//                 onclick={() => this.filterPokemons('all')}>\n//                     All\n//                 </Button>\n//                 {pokemonTypes.map(type =>(\n//                   <Button \n//                     key={ type }\n//                     onclick={() => this.filterPokemons(type)}\n//                     className=\"filter-button\"\n//                   >\n//                       { type }\n//                   </Button>\n//                 ))}\n//               </div>\n//               <Button \n//                 className=\"pokedex-button\"\n//                 onclick={() => this.nextPokemon(filteredPokemons.length)}\n//                 disabled={filteredPokemons.length <= 1}\n//               >\n//                 Próximo pokemon\n//               </Button>\n//             </div>\n//         );\n//     }\n// }\n// export default Pokedex;\nimport React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './button';\nimport './pokedex.css';\nimport './button.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filteredType: 'all'\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({\n      filteredType,\n      pokemonIndex: 0\n    });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const {\n      pokemons\n    } = this.props;\n    const {\n      filteredType\n    } = this.state;\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const {\n      pokemons\n    } = this.props;\n    return [...new Set(pokemons.reduce((types, {\n      type\n    }) => [...types, type], []))];\n  }\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokedex\",\n      children: [/*#__PURE__*/_jsxDEV(Pokemon, {\n        pokemon: pokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokedex-buttons-panel\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.filterPokemons('all'),\n          className: \"filter-button\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), pokemonTypes.map(type => /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => this.filterPokemons(type),\n          className: \"filter-button\",\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"pokedex-button \",\n          onClick: () => this.nextPokemon(filteredPokemons.length),\n          disabled: filteredPokemons.length <= 1,\n          children: \"Pr\\xF3ximo pok\\xE9mon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Pokedex; // import React from 'react';\n// import pokemons from './data';\n// import Pokemon from './Pokemon';\n// import Button from './button'\n// import './button.css';\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.filterPokemons = this.filterPokemons.bind(this);\n//     this.state = {\n//       numberOfClicks: 0,\n//       arrayPokemon: pokemons,\n//     }\n//   }\n//   handleClick() {\n//     const { numberOfClicks, arrayPokemon } = this.state\n//     if (numberOfClicks === arrayPokemon.length-1) {\n//       this.setState({ numberOfClicks: 0 })\n//     } else {\n//       this.setState((initialState, _props) => ({\n//         numberOfClicks: initialState.numberOfClicks + 1,\n//       }))\n//     }\n//   }\n//   filterPokemons(specificType) {\n//     const newArrayPokemon = specificType === 'All'\n//      ? pokemons\n//      : pokemons.filter(({ type }) => specificType === type)\n//      this.setState(() => (\n//       {\n//         arrayPokemon: newArrayPokemon,\n//         numberOfClicks: 0\n//       }\n//       ))\n//   }\n//   render() {\n//     const types = pokemons.reduce((array, { type }) => {\n//       if (array.includes(type)) return array\n//       else return array.concat(type)\n//     }, ['All']);\n//     return (\n//       <div>\n//          <Pokemon pokemon={this.state.arrayPokemon[this.state.numberOfClicks]} />\n//         <div className=\"pokedex\">\n//           <button\n//           onClick={this.handleClick}\n//           disabled={ this.state.numberOfClicks === this.state.arrayPokemon.length - 1}\n//           >Próximo</button>\n//           {types.map((type)=> (\n//             <Button\n//             key={type}\n//             onClick={() => this.filterPokemons(type)}\n//             type={type}\n//             className={'pokeButao'}\n//             />\n//           ))}\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Pokedex;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/bloco_11/dia_2/my-pokedex/src/Pokedex.js"],"names":["React","Pokemon","Button","Pokedex","Component","constructor","props","state","pokemonIndex","filteredType","filterPokemons","setState","nextPokemon","numberOfPokemons","fetchFilteredPokemons","pokemons","filter","pokemon","type","fetchPokemonTypes","Set","reduce","types","render","filteredPokemons","pokemonTypes","map","length"],"mappings":";AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,eAAP;AACA,OAAO,cAAP;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,YAAY,EAAE;AAFH,KAAb;AAID;;AAEDC,EAAAA,cAAc,CAACD,YAAD,EAAe;AAC3B,SAAKE,QAAL,CAAc;AAAEF,MAAAA,YAAF;AAAgBD,MAAAA,YAAY,EAAE;AAA9B,KAAd;AACD;;AAEDI,EAAAA,WAAW,CAACC,gBAAD,EAAmB;AAC5B,SAAKF,QAAL,CAAcJ,KAAK,KAAK;AACtBC,MAAAA,YAAY,EAAE,CAACD,KAAK,CAACC,YAAN,GAAqB,CAAtB,IAA2BK;AADnB,KAAL,CAAnB;AAGD;;AAEDC,EAAAA,qBAAqB,GAAG;AACtB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAmB,KAAKF,KAA9B;AAEA,WAAOQ,QAAQ,CAACC,MAAT,CAAgBC,OAAO,IAAI;AAChC,UAAIR,YAAY,KAAK,KAArB,EAA4B,OAAO,IAAP;AAC5B,aAAOQ,OAAO,CAACC,IAAR,KAAiBT,YAAxB;AACD,KAHM,CAAP;AAID;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAe,KAAKT,KAA1B;AAEA,WAAO,CAAC,GAAG,IAAIc,GAAJ,CAAQL,QAAQ,CAACM,MAAT,CAAgB,CAACC,KAAD,EAAQ;AAAEJ,MAAAA;AAAF,KAAR,KAAqB,CAAC,GAAGI,KAAJ,EAAWJ,IAAX,CAArC,EAAuD,EAAvD,CAAR,CAAJ,CAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,KAAKV,qBAAL,EAAzB;AACA,UAAMW,YAAY,GAAG,KAAKN,iBAAL,EAArB;AACA,UAAMF,OAAO,GAAGO,gBAAgB,CAAC,KAAKjB,KAAL,CAAWC,YAAZ,CAAhC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,OAAO,EAAGS;AAAnB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAM,KAAKP,cAAL,CAAoB,KAApB,CADjB;AAEE,UAAA,SAAS,EAAC,eAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAOGe,YAAY,CAACC,GAAb,CAAiBR,IAAI,iBACpB,QAAC,MAAD;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKR,cAAL,CAAoBQ,IAApB,CAFjB;AAGE,UAAA,SAAS,EAAC,eAHZ;AAAA,oBAKIA;AALJ,WACQA,IADR;AAAA;AAAA;AAAA;AAAA,gBADD,CAPH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAmBE;AAAA,+BACA,QAAC,MAAD;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,OAAO,EAAE,MAAM,KAAKN,WAAL,CAAiBY,gBAAgB,CAACG,MAAlC,CAFjB;AAGE,UAAA,QAAQ,EAAGH,gBAAgB,CAACG,MAAjB,IAA2B,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA+BD;;AAvEmC;;AA0EtC,eAAexB,OAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React from 'react';\n// import Pokemon from './Pokemon';\n// import Button from './button';\n// import './pokedex.css'\n\n// class Pokedex extends React.Component {\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             pokemonIndex: 0,\n//             filteredType: 'all',\n//         };\n//     }\n\n//     filterPokemons(filteredType) {\n//         this.setState({filteredType, pokemonIndex: 0})\n//     };\n\n//     nextPokemon (numberOfPokemons) {\n//         this.setState(state => ({\n//             pokemonIndex: (state.pokemonIndex + 1) %  numberOfPokemons,\n//         }));\n//     }\n\n//     fetchFilteredPokemons() {\n//         const { pokemons } = this.props;\n//         const { filteredType } = this.state;\n\n//         return pokemons.filter(pokemon => {\n//             if (filteredType === 'all') return true;\n//             return  pokemon.type === filteredType;\n//         });\n//     }\n\n//     fetchPokemonTypes() {\n//         const { pokemons } = this.props;\n\n//         return [...new Set(pokemons.reduce((types, {type}) => [...types, type], []))]\n//     }\n\n//     render() {\n//       const filteredPokemons = this.fetchFilteredPokemons();\n//       const pokemonTypes = this.fetchPokemonTypes();\n//       const pokemon = filteredPokemons[this.state.pokemonIndex];\n//     //   const { pokemons } = this.props;\n//     //   Recebemos do App.js, através da props \"pokemons\", o nosso array de pokemons.\n//     //   Devemos fazer um map, e nele renderizar o componente <Pokemon>, que receberá\n//     //   por props cada item do array. \n//     //   Lembre-se: é no componente Pokemon que iremos\n//     //   renderizar todas as informações necessárias para a exibição.\n//         return (\n//             <div className=\"pokedex\">\n//                 <Pokemon pokemon={ pokemon }/>\n//               <div className=\"pokedex-buttons-panel\">\n//                 <Button \n//                 onclick={() => this.filterPokemons('all')}>\n//                     All\n//                 </Button>\n//                 {pokemonTypes.map(type =>(\n//                   <Button \n//                     key={ type }\n//                     onclick={() => this.filterPokemons(type)}\n//                     className=\"filter-button\"\n//                   >\n//                       { type }\n//                   </Button>\n//                 ))}\n//               </div>\n//               <Button \n//                 className=\"pokedex-button\"\n//                 onclick={() => this.nextPokemon(filteredPokemons.length)}\n//                 disabled={filteredPokemons.length <= 1}\n//               >\n//                 Próximo pokemon\n//               </Button>\n//             </div>\n//         );\n//     }\n// }\n\n// export default Pokedex;\n\nimport React from 'react';\nimport Pokemon from './Pokemon';\nimport Button from './button';\nimport './pokedex.css';\nimport './button.css';\n\nclass Pokedex extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemonIndex: 0,\n      filteredType: 'all',\n    };\n  }\n\n  filterPokemons(filteredType) {\n    this.setState({ filteredType, pokemonIndex: 0 });\n  }\n\n  nextPokemon(numberOfPokemons) {\n    this.setState(state => ({\n      pokemonIndex: (state.pokemonIndex + 1) % numberOfPokemons,\n    }));\n  }\n\n  fetchFilteredPokemons() {\n    const { pokemons } = this.props;\n    const { filteredType } = this.state;\n\n    return pokemons.filter(pokemon => {\n      if (filteredType === 'all') return true;\n      return pokemon.type === filteredType;\n    });\n  }\n\n  fetchPokemonTypes() {\n    const { pokemons } = this.props;\n\n    return [...new Set(pokemons.reduce((types, { type }) => [...types, type], []))];\n  }\n\n  render() {\n    const filteredPokemons = this.fetchFilteredPokemons();\n    const pokemonTypes = this.fetchPokemonTypes();\n    const pokemon = filteredPokemons[this.state.pokemonIndex];\n\n    return (\n      <div className=\"pokedex\">\n        <Pokemon pokemon={ pokemon } />\n        <div className=\"pokedex-buttons-panel\">\n          <Button\n            onClick={() => this.filterPokemons('all')}\n            className=\"filter-button\"\n          >\n            All\n          </Button>\n          {pokemonTypes.map(type => (\n            <Button\n              key={ type }\n              onClick={() => this.filterPokemons(type)}\n              className=\"filter-button\"\n            >\n              { type }\n            </Button>\n          ))}\n        </div>\n        <div>\n        <Button\n          className=\"pokedex-button \"\n          onClick={() => this.nextPokemon(filteredPokemons.length)}\n          disabled={ filteredPokemons.length <= 1 }\n        >\n          Próximo pokémon\n        </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pokedex;\n\n// import React from 'react';\n// import pokemons from './data';\n// import Pokemon from './Pokemon';\n// import Button from './button'\n// import './button.css';\n// class Pokedex extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleClick = this.handleClick.bind(this);\n//     this.filterPokemons = this.filterPokemons.bind(this);\n//     this.state = {\n//       numberOfClicks: 0,\n//       arrayPokemon: pokemons,\n//     }\n//   }\n//   handleClick() {\n//     const { numberOfClicks, arrayPokemon } = this.state\n//     if (numberOfClicks === arrayPokemon.length-1) {\n//       this.setState({ numberOfClicks: 0 })\n//     } else {\n//       this.setState((initialState, _props) => ({\n//         numberOfClicks: initialState.numberOfClicks + 1,\n//       }))\n//     }\n//   }\n//   filterPokemons(specificType) {\n//     const newArrayPokemon = specificType === 'All'\n//      ? pokemons\n//      : pokemons.filter(({ type }) => specificType === type)\n//      this.setState(() => (\n//       {\n//         arrayPokemon: newArrayPokemon,\n//         numberOfClicks: 0\n//       }\n//       ))\n//   }\n//   render() {\n//     const types = pokemons.reduce((array, { type }) => {\n//       if (array.includes(type)) return array\n//       else return array.concat(type)\n//     }, ['All']);\n//     return (\n//       <div>\n//          <Pokemon pokemon={this.state.arrayPokemon[this.state.numberOfClicks]} />\n//         <div className=\"pokedex\">\n//           <button\n//           onClick={this.handleClick}\n//           disabled={ this.state.numberOfClicks === this.state.arrayPokemon.length - 1}\n//           >Próximo</button>\n//           {types.map((type)=> (\n//             <Button\n//             key={type}\n//             onClick={() => this.filterPokemons(type)}\n//             type={type}\n//             className={'pokeButao'}\n//             />\n//           ))}\n//       </div>\n//       </div>\n//     )\n//   }\n// }\n// export default Pokedex;"]},"metadata":{},"sourceType":"module"}