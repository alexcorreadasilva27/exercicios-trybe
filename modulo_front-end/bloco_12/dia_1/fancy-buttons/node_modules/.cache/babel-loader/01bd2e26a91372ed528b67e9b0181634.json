{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/exercicios-trybe/modulo_front-end/dia_1/fancy-buttons/src/App.js\";\nimport React from 'react';\nimport './App.css';\n/* Embora isso funcione, essa DEFINITIVAMENTE\nnão é a maneira correta de se criar eventos\nem React! A função se refere ao componente,\nentão deve ser parte de sua classe! */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction handleClick1() {\n  console.log('Clicou no botão!');\n}\n\nfunction handleClick2() {\n  console.log('Parabéns Você ganhou $1000000,00');\n}\n\nfunction handleClick3() {\n  console.log('Clicou no botão!');\n}\n\nclass App extends React.Component {\n  /* Repare que, diferentemente do HTML, no\n  JSX você associa uma função a um evento\n  passando a própria função entre chaves `{}` */\n  render() {\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick1,\n        children: \"Meu bot\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick2,\n        children: \"Clique e Veja Seu Pr\\xEAmio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        on: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/dia_1/fancy-buttons/src/App.js"],"names":["React","handleClick1","console","log","handleClick2","handleClick3","App","Component","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA;AACA;AACA;AACA;;;;AACA,SAASC,YAAT,GAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAED,SAASC,YAAT,GAAwB;AACtBF,EAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD;;AAED,SAASE,YAAT,GAAwB;AACtBH,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAED,MAAMG,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAChC;AACF;AACA;AACEC,EAAAA,MAAM,GAAG;AACP;;AACA;AAAA;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAEP,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD;;AAZ+B;;AAelC,eAAeE,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\n\n/* Embora isso funcione, essa DEFINITIVAMENTE\nnão é a maneira correta de se criar eventos\nem React! A função se refere ao componente,\nentão deve ser parte de sua classe! */\nfunction handleClick1() {\n  console.log('Clicou no botão!')\n}\n\nfunction handleClick2() {\n  console.log('Parabéns Você ganhou $1000000,00')\n}\n\nfunction handleClick3() {\n  console.log('Clicou no botão!')\n}\n\nclass App extends React.Component {\n  /* Repare que, diferentemente do HTML, no\n  JSX você associa uma função a um evento\n  passando a própria função entre chaves `{}` */\n  render() {\n    return \n    <div>\n      <button onClick={handleClick1}>Meu botão</button>\n      <button onClick={handleClick2}>Clique e Veja Seu Prêmio</button>\n      <button on></button>\n    </div>\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}