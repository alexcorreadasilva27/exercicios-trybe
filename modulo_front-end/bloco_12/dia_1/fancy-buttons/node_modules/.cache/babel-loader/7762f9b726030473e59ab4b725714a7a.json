{"ast":null,"code":"var _jsxFileName = \"/home/alex/projetos/exercicios-trybe/modulo_front-end/dia_1/fancy-buttons/src/App.js\";\n// import React from 'react';\n// import './App.css';\n// /* Embora isso funcione, essa DEFINITIVAMENTE\n// não é a maneira correta de se criar eventos\n// em React! A função se refere ao componente,\n// então deve ser parte de sua classe! */\n// function handleClick1() {\n//   console.log('Clicou no botão!')\n// }\n// function handleClick2() {\n//   console.log('Parabéns Você ganhou $1000000,00')\n// }\n// function handleClick3() {\n//   console.log('Parabéns acaba de ganhar uma Viajem para o Monte Everesr')\n// }\n// class App extends React.Component {\n//   /* Repare que, diferentemente do HTML, no\n//   JSX você associa uma função a um evento\n//   passando a própria função entre chaves `{}` */\n//   render() {\n//     return (\n//     <div>\n//       <button onClick={handleClick1}>Meu botão</button>\n//       <button onClick={handleClick2}>Clique e Veja Seu Prêmio</button>\n//       <button onClick={handleClick3}>Clique e Ganhe uma Viajem</button>\n//     </div>\n//   )\n//   }\n// }\n// export default App;\n////////////////////////////////Acessando uma função nossa dentro da classe/////////////////////\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  handleClick() {\n    console.log('Clicou!');\n  }\n\n  render() {\n    /* No React, precisamos dizer explicitamente que queremos uma função da nossa classe\n    através da sintaxe `this.minhaFuncao` para usá-la num evento */\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      children: \"Meu bot\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/projetos/exercicios-trybe/modulo_front-end/dia_1/fancy-buttons/src/App.js"],"names":["React","App","Component","handleClick","console","log","render"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACJ;AACI,wBAAO;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKH,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAT+B;;AAYlC,eAAeF,GAAf","sourcesContent":["// import React from 'react';\n// import './App.css';\n\n// /* Embora isso funcione, essa DEFINITIVAMENTE\n// não é a maneira correta de se criar eventos\n// em React! A função se refere ao componente,\n// então deve ser parte de sua classe! */\n// function handleClick1() {\n//   console.log('Clicou no botão!')\n// }\n\n// function handleClick2() {\n//   console.log('Parabéns Você ganhou $1000000,00')\n// }\n\n// function handleClick3() {\n//   console.log('Parabéns acaba de ganhar uma Viajem para o Monte Everesr')\n// }\n\n// class App extends React.Component {\n//   /* Repare que, diferentemente do HTML, no\n//   JSX você associa uma função a um evento\n//   passando a própria função entre chaves `{}` */\n//   render() {\n//     return (\n//     <div>\n//       <button onClick={handleClick1}>Meu botão</button>\n//       <button onClick={handleClick2}>Clique e Veja Seu Prêmio</button>\n//       <button onClick={handleClick3}>Clique e Ganhe uma Viajem</button>\n//     </div>\n//   )\n//   }\n// }\n\n// export default App;\n////////////////////////////////Acessando uma função nossa dentro da classe/////////////////////\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  handleClick() {\n    console.log('Clicou!')\n  }\n\n  render() {\n    /* No React, precisamos dizer explicitamente que queremos uma função da nossa classe\n    através da sintaxe `this.minhaFuncao` para usá-la num evento */\n    return <button type=\"button\" onClick={this.handleClick}>Meu botão</button>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}